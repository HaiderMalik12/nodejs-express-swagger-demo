openapi: 3.0.0
info:
  title: Booking API Dcos
  version: 1.0.0
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Booking:
      type: object
      properties:
        title:
          type: string
          description: "Booking Title"
        desc:
          type: string
          description: "Booking Description"
        amount:
          type: number
          description: "Booking amount"
    ArrayOfBooking:
      type: array
      items:
        $ref: "#components/schemas/Booking"
paths:
  /bookings/create:
    post:
      tags:
        - bookings
      security:
        - bearerAuth: []
      summary: Create new booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Booking"
      responses:
        "200":
          description: booking created successfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Booking"
        "400":
          description: "Bad request invalid booking details"
  /bookings/all:
    get:
      tags:
        - bookings
      summary: Get all bookings
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfBooking"
        "400":
          description: Bad request. Invalid Booking Details
  /bookings/{id}/find:
    get:
      tags:
        - bookings
      summary: Get single booking
      parameters:
        - in: path
          name: id
          required: true
      responses:
        "200":
          description: Fetched booking successfully
          application/json:
            schema:
              $ref: "#/components/schemas/Booking"
        "400":
          description: Could not find booking
  /bookings/{id}/update:
    put:
      tags:
        - bookings
      summary: update single booking
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Booking"
      responses:
        "200":
          description: updated booking successfully
          application/json:
            schema:
              $ref: "#/components/schemas/Booking"
        "400":
          description: Could not find booking
  /bookings/{id}/delete:
    delete:
      tags:
        - bookings
      summary: delete single booking
      parameters:
        - in: path
          name: id
          required: true
      responses:
        "200":
          description: deleted booking successfully
          application/json:
            schema:
              $ref: "#/components/schemas/Booking"
        "400":
          description: Could not find booking
